import { connectToDatabase } from "@/lib/mongodb";
import { Airport, ResultsMetadata } from "@/types/aviation";
import Head from "next/head";
import { useEffect, useState } from "react";

// Since the code in getServerSideProps is executed on the server side, we can use the database connection.
// The page will be rendered with the data returned from the database.
export async function getServerSideProps() {
  let users: any[] = [];

  try {
    const client = await connectToDatabase();
    const db = client.db("local");

    const usersData = await db.collection("users").find().toArray();
    users = JSON.parse(JSON.stringify(usersData)); // Hack to serialize the data
  } catch (err) {
    console.log(err);
  }

  return {
    props: { users },
  };
}

// This values should be controlled by the user to implement pagination, sorting and filtering
const limit = 100;
const skip = 0;
const sortBy = "iata";
const sortByOrder = "asc";

interface HomeProps {
  users: any[];
}

export default function Home({ users }: HomeProps) {
  // Call api/aviation to get the data
  const [aviation, setAviation] = useState<Airport[]>([]);
  const [resultsMetadata, setResultsMetadata] =
    useState<ResultsMetadata | null>(null);

  const [isLoading, setIsLoading] = useState(false);

  const fetchData = async () => {
    setIsLoading(true);

    try {
      if (process.env.NEXT_PUBLIC_API_KEY) {
        const res = await fetch(
          // "/api/users" if we wanted to use a local api
          `https://airportsdata.p.rapidapi.com/airports?limit=${limit}&skip=${skip}&sortBy=${sortBy}&sortByOrder=${sortByOrder}`,
          {
            headers: {
              "X-RapidAPI-Key": process.env.NEXT_PUBLIC_API_KEY,
              "X-RapidAPI-Host": "airportsdata.p.rapidapi.com",
            },
          }
        );

        const { data, metadata } = await res.json();
        if (Array.isArray(data)) setAviation(data);
        if (metadata) setResultsMetadata(metadata);
      }
    } catch (err) {
      console.log(err);
    }

    setIsLoading(false);
  };

  useEffect(() => {
    fetchData();
  }, []);

  return (
    <>
      <Head>
        <title>Next App Template</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-screen w-screen flex flex-col overflow-y-auto">
        <div className="flex items-center justify-between w-full p-4 bg-indigo-800">
          <h1 className="text-2xl font-bold text-slate-100 select-none">
            AirScanner
          </h1>

          <div className="h-9 w-9 bg-indigo-100 rounded-full flex items-center justify-center cursor-pointer" />
        </div>

        <div className="flex flex-col  p-4 gap-2 bg-indigo-100 text-gray-800">
          <p>This data is pre-rendered with the users list passed as a prop:</p>
          <div className="flex w-full gap-4">
            {users.map((user) => (
              <div
                key={user.name}
                className="py-1 px-2 rounded-lg shadow-indigo-500 shadow-sm select-none"
              >
                <h1>{user.name}</h1>
              </div>
            ))}
          </div>
        </div>

        <div className="flex flex-col grow w-full p-4 gap-4 bg-white text-gray-800 relative">
          {!process.env.NEXT_PUBLIC_API_KEY ? (
            <h1>
              Please add your API key to the .env.local file. You can get one at{" "}
              <a
                href="https://rapidapi.com/gamma-solutions-gamma-solutions-default/api/airportsdata"
                target="_blank"
                rel="noreferrer"
                className="text-indigo-600 underline"
              >
                here
              </a>
              .
            </h1>
          ) : isLoading ? (
            <h1>Loading...</h1>
          ) : !aviation?.length ? (
            <h1>Sorry, we couldn&apos;t find any data.</h1>
          ) : (
            <div className="flex flex-col gap-4 text-base">
              <p>This data is fetched from the client using an external API:</p>
              <h1>
                Showing{" "}
                <span className="font-semibold">
                  {aviation.length} of{" "}
                  {resultsMetadata?.total || aviation.length}
                </span>{" "}
                operational airports and landing strips in the world.
              </h1>

              {aviation?.map((airport, index) => (
                <div
                  key={`${airport.iata}-${index}`}
                  className="flex flex-col items-start justify-start w-full p-4 rounded-lg shadow-gray-400 shadow-sm"
                >
                  <div className="flex items-start justify-between w-full">
                    <div className="flex flex-col items-start justify-start gap-1">
                      <h1>{airport.name}</h1>
                      <div className="flex items-center justify-start gap-1 font-semibold text-gray-600 text-sm">
                        {airport.city && <h1>{airport.city}, </h1>}
                        {airport.subd && <h1>{airport.subd}, </h1>}
                        <h1>{airport.country}</h1>
                      </div>
                      <div className="flex items-center justify-start gap-4 font-semibold text-gray-600 text-xs">
                        {airport.lat && airport.lon && (
                          <h1>
                            {parseFloat(airport.lat).toFixed(2)},{" "}
                            {parseFloat(airport.lon).toFixed(2)}
                          </h1>
                        )}
                        {airport.elevation && <h1>{airport.elevation} MSL</h1>}
                      </div>
                    </div>
                    {airport.iata && (
                      <h1 className="bg-indigo-100 rounded-lg p-2 min-w-[50px] flex justify-center items-center">
                        {airport.iata}
                      </h1>
                    )}
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      </main>
    </>
  );
}
